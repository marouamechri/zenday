security:
    enable_authenticator_manager: true

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    
    access_control:
        # Public routes
        - { path: ^/api/login$, roles: PUBLIC_ACCESS }
        - { path: ^/api/register$, roles: PUBLIC_ACCESS }
        - { path: ^/api/forgot-password$, roles: PUBLIC_ACCESS }
        - { path: ^/api/reset-password$, roles: PUBLIC_ACCESS }
        - { path: ^/api/verify-email$, roles: PUBLIC_ACCESS }

        #tags
        - { path: ^/api/tags$, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api/tags/.+, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api/tags, methods: [POST, PUT, DELETE], roles: ROLE_ADMIN }
       
        # Humeurs
        - { path: ^/api/humeur$, methods: [GET, POST], roles: PUBLIC_ACCESS } 
        - { path: ^/api/humeur/, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api/humeur/, methods: [PUT, DELETE], roles: ROLE_ADMIN }
        
        # Documentation API (optionnel)
        - { path: ^/api/doc, roles: PUBLIC_ACCESS }
        
        # Zone admin - protection stricte
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        
        # Toutes les autres routes API n√©cessitent une authentification
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
